/**
 * DOCUMENTATION
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: contact-email@something.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Documentation);
  }
}(this, function(expect, Documentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Documentation.UsersPermissionsUsersRolesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersPermissionsUsersRolesApi', function() {
    describe('usersCountGet', function() {
      it('should call usersCountGet successfully', function(done) {
        //uncomment below and update the code to test usersCountGet
        //instance.usersCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersGet', function() {
      it('should call usersGet successfully', function(done) {
        //uncomment below and update the code to test usersGet
        //instance.usersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdDelete', function() {
      it('should call usersIdDelete successfully', function(done) {
        //uncomment below and update the code to test usersIdDelete
        //instance.usersIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdGet', function() {
      it('should call usersIdGet successfully', function(done) {
        //uncomment below and update the code to test usersIdGet
        //instance.usersIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersIdPut', function() {
      it('should call usersIdPut successfully', function(done) {
        //uncomment below and update the code to test usersIdPut
        //instance.usersIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersMeGet', function() {
      it('should call usersMeGet successfully', function(done) {
        //uncomment below and update the code to test usersMeGet
        //instance.usersMeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsPermissionsGet', function() {
      it('should call usersPermissionsPermissionsGet successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsPermissionsGet
        //instance.usersPermissionsPermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsRolesGet', function() {
      it('should call usersPermissionsRolesGet successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsRolesGet
        //instance.usersPermissionsRolesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsRolesIdGet', function() {
      it('should call usersPermissionsRolesIdGet successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsRolesIdGet
        //instance.usersPermissionsRolesIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsRolesPost', function() {
      it('should call usersPermissionsRolesPost successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsRolesPost
        //instance.usersPermissionsRolesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsRolesRoleDelete', function() {
      it('should call usersPermissionsRolesRoleDelete successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsRolesRoleDelete
        //instance.usersPermissionsRolesRoleDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPermissionsRolesRolePut', function() {
      it('should call usersPermissionsRolesRolePut successfully', function(done) {
        //uncomment below and update the code to test usersPermissionsRolesRolePut
        //instance.usersPermissionsRolesRolePut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPost', function() {
      it('should call usersPost successfully', function(done) {
        //uncomment below and update the code to test usersPost
        //instance.usersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
